<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.wenger.dev/</id><title>Alex's Blog</title><subtitle>A personal blog page about various IT topics.</subtitle> <updated>2024-06-16T17:53:53+02:00</updated> <author> <name>Alexander Wenger</name> <uri>https://blog.wenger.dev/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.wenger.dev/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://blog.wenger.dev/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> Â© 2024 Alexander Wenger </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Automating Terraform and Provider Updates</title><link href="https://blog.wenger.dev/posts/Automating-Terraform-Updates/" rel="alternate" type="text/html" title="Automating Terraform and Provider Updates" /><published>2024-06-15T21:00:00+02:00</published> <updated>2024-06-15T21:00:00+02:00</updated> <id>https://blog.wenger.dev/posts/Automating-Terraform-Updates/</id> <content src="https://blog.wenger.dev/posts/Automating-Terraform-Updates/" /> <author> <name>Alexander Wenger</name> </author> <category term="Terraform" /> <summary> As infrastructure as code (IaC) becomes increasingly popular, managing Terraform versions and provider dependencies efficiently is crucial. Discover in this blog post how Renovate simplifies managing Terraform versions and providers in your Git repository. Renovate allows some very specialized and complex setups, as you can configure a lot and it supports a lot of tools, but I want to show you ... </summary> </entry> <entry><title>Mastering Terraform Validation Pipelines</title><link href="https://blog.wenger.dev/posts/Terraform-Validation-Pipeline/" rel="alternate" type="text/html" title="Mastering Terraform Validation Pipelines" /><published>2024-04-27T21:00:00+02:00</published> <updated>2024-04-27T21:00:00+02:00</updated> <id>https://blog.wenger.dev/posts/Terraform-Validation-Pipeline/</id> <content src="https://blog.wenger.dev/posts/Terraform-Validation-Pipeline/" /> <author> <name>Alexander Wenger</name> </author> <category term="Terraform" /> <summary> In this blog post, I want to show you how to create an Azure pipeline that can be used to automatically validate your Terraform code and make suggestions for security, quality and best practices so that you can improve your scrappy code. How? using static code analysis tools! There are a lot out there for Terraform and the major private cloud providers, but I have picked just a few that have ma... </summary> </entry> <entry><title>YAML Magic: Automating Terraform Like a Pro</title><link href="https://blog.wenger.dev/posts/Terraform-Yaml-Guide/" rel="alternate" type="text/html" title="YAML Magic: Automating Terraform Like a Pro" /><published>2024-04-09T21:00:00+02:00</published> <updated>2024-04-11T08:31:42+02:00</updated> <id>https://blog.wenger.dev/posts/Terraform-Yaml-Guide/</id> <content src="https://blog.wenger.dev/posts/Terraform-Yaml-Guide/" /> <author> <name>Alexander Wenger</name> </author> <category term="Terraform" /> <summary> Following scenario: You have created an extremely well-designed Terraform that automates your boring and repetitive task, BUT you are the only one who knows how to take advantage of it. Lets take this example Terraform where we want to automate the creation of an EntraID group for each department in your company: data "azuread_client_config" "current" {} resource "azuread_group" "Sales" { ... </summary> </entry> <entry><title>Secure Self-Hosting: A Guide to Automatically Pulling and Hosting Your Static Website from GitHub</title><link href="https://blog.wenger.dev/posts/Selfhost-Guide/" rel="alternate" type="text/html" title="Secure Self-Hosting: A Guide to Automatically Pulling and Hosting Your Static Website from GitHub" /><published>2024-04-01T15:15:00+02:00</published> <updated>2024-04-03T10:26:50+02:00</updated> <id>https://blog.wenger.dev/posts/Selfhost-Guide/</id> <content src="https://blog.wenger.dev/posts/Selfhost-Guide/" /> <author> <name>Alexander Wenger</name> </author> <category term="Self-Hosting" /> <summary> In this guide I will show you an easy, lightweight and secure way to host your own website at home without showing your IP to the whole world. The solution consists of the following docker images: Docker Image Description portainer Management tool for docker caddy Webserver to host the static website nginx p... </summary> </entry> </feed>
